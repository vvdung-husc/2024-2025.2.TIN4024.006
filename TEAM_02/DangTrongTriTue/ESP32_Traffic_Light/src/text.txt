#include <Arduino.h>
#define DS 5;
#define SHCP 18;
#define STCP 23;

// Khai báo chân kết nối với ESP32
int led_green = 19;
int led_yellow = 17;
int led_red = 16;

unsigned long previousMillis = 0;
int state = 0;
int greenTime, redTime;
const int yellowTime = 3000;

// Mã hiển thị số trên led 7 đoạn
const uint8_t digits[10] = {
    0b00111111, // 0
    0b00000110, // 1
    0b01011011, // 2
    0b01001111, // 3
    0b01100110, // 4
    0b01101101, // 5
    0b01111101, // 6
    0b00000111, // 7
    0b01111111, // 8
    0b01101111  // 9
};

void setup() {
    pinMode(DS, OUTPUT);
    pinMode(SHCP, OUTPUT);
    pinMode(STCP, OUTPUT);
/*    pinMode(led_green, OUTPUT);
    pinMode(led_yellow, OUTPUT);
    pinMode(led_red, OUTPUT);
    randomSeed(analogRead(0));
    redTime = random(20, 26) * 1000;
    greenTime = random(27, 34) * 1000;
    previousMillis = millis();*/
}

void sendData(uint8_t data1, uint8_t data2){
    digitalWrite(STCP,LOW);
    shiftOut(DS, SHCP, MSBFIRST, data2);
    shiftOut(DS, SHCP, MSBFIRST, data2);
    digitalWrite(STCP,HIGH);
}

void loop(){
    if (currentMillis - previousMillis >= interval) {
        previousMillis = currentMillis;
        sendData(digits[i], digits[j]);
        j++;
        if (j >= 10) {
          j = 0;
          i++;
          if (i >= 10) {
            i = 0;
          }
    }
}}

/*void loop() {
    unsigned long currentMillis = millis();
    switch (state) {
        case 0: // Đèn đỏ
            digitalWrite(led_red, HIGH);
            digitalWrite(led_yellow, LOW);
            digitalWrite(led_green, LOW);
            if (currentMillis - previousMillis >= redTime) {
                previousMillis = currentMillis;
                state = 1;
            }
            break;
        case 1: // Đèn xanh
            digitalWrite(led_red, LOW);
            digitalWrite(led_yellow, LOW);
            digitalWrite(led_green, HIGH);
            if (currentMillis - previousMillis >= greenTime) {
                previousMillis = currentMillis;
                state = 2;
            }
            break;
        case 2: // Đèn vàng
            digitalWrite(led_red, LOW);
            digitalWrite(led_yellow, HIGH);
            digitalWrite(led_green, LOW);
            if (currentMillis - previousMillis >= yellowTime) {
                previousMillis = currentMillis;
                state = 0;
                redTime = random(20, 26) * 1000;
                greenTime = random(27, 34) * 1000;
            }
            break;
    }
}*/