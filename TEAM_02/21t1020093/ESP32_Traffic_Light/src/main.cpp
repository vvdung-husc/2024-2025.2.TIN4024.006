#include <Arduino.h>
#include <TM1637Display.h>

// Khai b√°o ch√¢n ƒë√®n giao th√¥ng
int redPin = 27;
int yellowPin = 26;
int greenPin = 25;
int bluePin = 21; // ƒê√®n xanh d∆∞∆°ng

const int buttonPin = 23; // N√∫t nh·∫•n
bool isPaused = false;    // Bi·∫øn ki·ªÉm so√°t d·ª´ng hi·ªÉn th·ªã
unsigned long lastButtonPress = 0;
const float GAMMA = 0.7;
const float RL10 = 50;

const int CLK = 18;
const int DIO = 19;
const int ldrPin = 13; // C·∫£m bi·∫øn √°nh s√°ng
TM1637Display display(CLK, DIO);

unsigned long previousMillis = 0;
long interval = 1000;
int countdown = 0;
int state = 0;
bool nightMode = false; // Ch·∫ø ƒë·ªô ban ƒë√™m

const int NUM_SAMPLES = 5;
float getLuxFiltered()

void setup() {
    pinMode(redPin, OUTPUT);
    pinMode(yellowPin, OUTPUT);
    pinMode(greenPin, OUTPUT);
    pinMode(bluePin, OUTPUT); // ƒê√®n xanh d∆∞∆°ng

    pinMode(buttonPin, INPUT_PULLUP);
    pinMode(ldrPin, INPUT);

    Serial.begin(9600);
    display.setBrightness(7);

    digitalWrite(greenPin, HIGH);
    Serial.println("ƒê√®n xanh (5 gi√¢y)");
    countdown = 5;
    state = 0;
}

void changeLight() {
    if (nightMode) return; // N·∫øu tr·ªùi t·ªëi th√¨ kh√¥ng ƒë·ªïi ƒë√®n

    digitalWrite(redPin, LOW);
    digitalWrite(yellowPin, LOW);
    digitalWrite(greenPin, LOW);

    if (state == 0) { // ƒê√®n v√†ng
        digitalWrite(yellowPin, HIGH);
        Serial.println("ƒê√®n v√†ng (2 gi√¢y)");
        countdown = 2;
        state = 1;
    } else if (state == 1) { // ƒê√®n ƒë·ªè
        digitalWrite(redPin, HIGH);
        Serial.println("ƒê√®n ƒë·ªè (5 gi√¢y)");
        countdown = 5;
        state = 2;
    } else { // ƒê√®n xanh
        digitalWrite(greenPin, HIGH);
        Serial.println("ƒê√®n xanh (5 gi√¢y)");
        countdown = 5;
        state = 0;
    }
}

// Ki·ªÉm tra n√∫t nh·∫•n v·ªõi debounce b·∫±ng millis()
void checkButtonPress() {
    if (digitalRead(buttonPin) == LOW) { // Khi n√∫t ƒë∆∞·ª£c nh·∫•n
        unsigned long currentMillis = millis();
        if (currentMillis - lastButtonPress > 200) { // Ch·ªëng d·ªôi ph√≠m
            isPaused = !isPaused; // ƒê·∫£o tr·∫°ng th√°i
            lastButtonPress = currentMillis; 

            if (isPaused) {
                digitalWrite(bluePin, HIGH);
                display.clear(); // T·∫Øt m√†n h√¨nh s·ªë
            } else {
                digitalWrite(bluePin, LOW);
                display.showNumberDec(countdown, true); // Hi·ªÉn th·ªã l·∫°i s·ªë
            }

            Serial.print("Tr·∫°ng th√°i hi·ªÉn th·ªã: ");
            Serial.println(isPaused ? "T·∫ÆT M√ÄN H√åNH" : "B·∫¨T M√ÄN H√åNH");
        }
    }
}

// H√†m t√≠nh Lux t·ª´ c·∫£m bi·∫øn LDR
float calculateLux(int adcValue) {
    if (adcValue == 0) return 0; // Tr√°nh l·ªói chia cho 0

    // Chuy·ªÉn ƒë·ªïi gi√° tr·ªã ADC th√†nh ƒëi·ªán √°p (ESP32 c√≥ ADC 12-bit: 0 - 4095)
    float voltage = adcValue / 4095.0 * 3.3;
    
    // T√≠nh to√°n gi√° tr·ªã ƒëi·ªán tr·ªü c·ªßa LDR
    float resistance = 2000 * voltage / (1 - voltage / 5);
    
    // T√≠nh to√°n lux d·ª±a tr√™n c√¥ng th·ª©c tham kh·∫£o
    float lux = pow(RL10 * 1e3 * pow(10, GAMMA) / resistance, (1 / GAMMA));

    return lux;
}

void loop() {
    checkButtonPress(); // Ki·ªÉm tra n√∫t nh·∫•n non-blocking

    int ldrValue = analogRead(ldrPin); // ƒê·ªçc gi√° tr·ªã t·ª´ LDR
    float lux = calculateLux(ldrValue); // Chuy·ªÉn ƒë·ªïi sang lux

    // üü° In gi√° tr·ªã LDR & Lux ra Serial ƒë·ªÉ ki·ªÉm tra
    // Serial.print("LDR ADC: "); Serial.print(ldrValue);
    Serial.print("Lux: "); Serial.println(lux);

    if (lux < 50) { // Tr·ªùi t·ªëi ‚Üí Ch·ªâ ƒë√®n v√†ng s√°ng, t·∫Øt m√†n h√¨nh
        digitalWrite(redPin, LOW);
        digitalWrite(greenPin, LOW);
        digitalWrite(yellowPin, HIGH);
        display.clear(); // T·∫Øt m√†n h√¨nh s·ªë
        nightMode = true; // B·∫≠t ch·∫ø ƒë·ªô ban ƒë√™m
        return;
    } else { 
        if (nightMode) { // N·∫øu chuy·ªÉn t·ª´ ch·∫ø ƒë·ªô t·ªëi sang s√°ng, reset l·∫°i ƒë√®n xanh
            digitalWrite(yellowPin, LOW);
            digitalWrite(greenPin, HIGH);
            Serial.println("Chuy·ªÉn sang ch·∫ø ƒë·ªô ban ng√†y - ƒê√®n xanh s√°ng (5 gi√¢y)");
            countdown = 5;
            state = 0;
        }
        nightMode = false; // T·∫Øt ch·∫ø ƒë·ªô ban ƒë√™m
    }

    // N·∫øu tr·ªùi s√°ng ‚Üí Ch·∫°y b√¨nh th∆∞·ªùng
    unsigned long currentMillis = millis();
    if (currentMillis - previousMillis >= interval) {
        previousMillis = currentMillis;

        if (!nightMode && countdown < 0) {
            changeLight();
        }

        Serial.print("C√≤n ");
        Serial.print(countdown);
        Serial.println(" gi√¢y");

        if (!isPaused && !nightMode) {
            display.showNumberDec(countdown, true);
        }

        countdown--;
    }
}